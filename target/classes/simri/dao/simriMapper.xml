<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
  <mapper namespace="simriSQL">
  	<!-- 심리테스트 목록 -->
  	<select id="getSimriTest_List" resultType="simri">
  		select * from community where category = '심리 테스트' order by seq desc
  	</select>
  	
  	<!-- 글 갖고오기 -->
    <select id="getCommunity" parameterType="int" resultType="simri">
       select * from community where seq=#{seq}
    </select>
  	
  	<!-- 관련글 -->
  	<select id="getSimriList" parameterType="java.util.Map" resultType="simri">
  		select * from
  		(select rownum rn, tt. * from
  		(select * from community where (content  like '%'||#{hashTag1}||'%'
  		<choose>
  			<when test='hashTag2!=""'> or content like '%'||#{hashTag2}||'%'</when>
  		</choose>
  		<choose>
  			<when test='hashTag3!=""'> or content like '%'||#{hashTag3}||'%'</when>		
  		</choose>
  		or hashTag1 like '%'||#{hashTag1}||'%'
  		<choose>
  			<when test='hashTag2!=""'> or hashTag1 like '%'||#{hashTag2}||'%'</when>
  		</choose>
  		<choose>
  			<when test='hashTag3!=""'> or hashTag1 like '%'||#{hashTag3}||'%'</when>
  		</choose>
  		or hashTag2 like '%'||#{hashTag1}||'%'
  		<choose>
  			<when test='hashTag2!=""'> or hashTag2 like '%'||#{hashTag2}||'%'</when>  			
  		</choose>
  		<choose>
  			<when test='hashTag3!=""'> or hashTag2 like '%'||#{hashTag3}||'%'</when>
  		</choose>
  		or hashTag3 like '%'||#{hashTag1}||'%'
  		<choose>
  			<when test='hashTag2!=""'> or hashTag3 like '%'||#{hashTag2}||'%'</when>
  		</choose>
  		<choose>
  			<when test='hashTag3!=""'> or hashTag3 like '%'||#{hashTag3}||'%'</when>
  		</choose>
  		)
  		and seq not in #{seq} and category = #{category}
  		 order by seq desc)tt)
  		 where rn>=1 and <![CDATA[rn<= 3]]>
  	</select>
	
	<!-- 신고 check -->
    <select id="singoCheck" parameterType="likesingo" resultType="Integer">
    	select singo from likeSingo where seq=#{seq} and email=#{email} and replySeq = #{replySeq} 
    </select>
    
	<!-- 신고 테이블 삽입-->
	<insert id="singoInsert" parameterType="likesingo">
    insert into likeSingo(seq, replySeq, category, nickName, email, palette, likeLogtime) 
 			values(		#{seq},
 						#{replySeq},						
				 		#{category},
				 		#{nickName},
				 		#{email},
				 		#{palette},
				 		sysdate				 		
				 		)
	</insert>
	
	<!-- 댓글 신고 -->
  	<update id="replySingo" parameterType="java.util.Map">
		begin
			update likeSingo set singo=1 where seq=#{seq} and email=#{email} and replySeq=#{replySeq};
			update reply set replySingoReason=#{singoReason}, replySingo = replySingo+1 where replySeq=#{replySeq};
			update simriMember set memSingo = memSingo+1, singoReason = #{singoReason} where email = #{singoEmail}; 
		end;		
	</update>
	
	
  	<select id="getMagazine_List" parameterType="java.util.Map" resultType="simri">
  	
  		select * from 
       (select rownum rn, tt. * from 
       (select * from community
       where category = '연애 심리글'
       order by seq desc)tt)
       where <![CDATA[rn>= #{startNum}]]> and  <![CDATA[rn<= #{endNum}]]>
  	
  	</select>
  	
  	<!-- 통합 게시글 등록된 글자수 -->
    <select id="getTotalA" resultType="int">
       select count(*) from community
    </select>
    
    	<!-- 통합 게시글 등록된 글자수 -->
    <select id="getLoveTotalA" resultType="int">
       select count(*) from community where category = '연애 심리글'
    </select>
    
     <!-- 글 갖고오기 -->
    <select id="getMagazine" parameterType="int" resultType="community">
       select * from community where seq=#{seq}
    </select>
  	
  	<!-- 조회수 -->
  	<update id="hitUpdate" parameterType="int"> 
  	begin
      update community set hit=hit+1 where seq=#{seq};
      
      insert into etctest(seq,etclogtime,hithit) values( #{seq}, to_char(sysdate, 'yy/mm/dd'), 1);
   end;
   </update>
  	
  	  <!--  검색한 총글수 -->  
   <select id="getloveSearchTotalA"  parameterType="java.util.Map" resultType="int"> 
          select count(*) from community where ${searchOption} like '%'||#{keyword}||'%' and category = '연애 심리글'
   </select>
  	
  	   <!-- 검색한 리스트 갖고오기 -->
   <select id="magazine_Search" parameterType="java.util.Map" resultType="community">
	       <![CDATA[
	       select * from 
	      (select rownum rn, tt.* from
	      (select * from community where  ${searchOption} like '%'||#{keyword}||'%' 
	      								and category = '연애 심리글' order by seq desc
	       )tt)
	      where rn>= #{startNum} and rn<= #{endNum}
	       ]]>
   </select>
   
   <!-- 통합 검색 -->
   <select id="getTotalSearch" parameterType="java.util.Map" resultType="community">
	       <![CDATA[
	       select * from 
	      (select rownum rn, tt.* from
	      (select * from community where  subject like '%'||#{totalKeyword}||'%' 
	      								or content like '%'||#{totalKeyword}||'%' order by seq desc
	       )tt)
	      where rn>= #{startNum} and rn<= #{endNum}
	       ]]>
   </select>

  <!--  통합 검색한 총글수 -->  
   <select id="getSearchTotalA"  parameterType="java.util.Map" resultType="int">
          select count(*) from community where subject like '%'||#{totalKeyword}||'%' or content like '%'||#{totalKeyword}||'%'
   </select>   
   
    <!-- 좋아요 check -->
    <select id="likeCheck" parameterType="likesingo" resultType="Integer">
    	select likes from likeSingo where seq=#{seq} and email=#{email} and replySeq=0    
    </select>
  	
  	<!-- 좋아요 테이블 삽입 -->
    <insert id="likeInsert" parameterType="likesingo">
    insert into likeSingo(seq, replySeq,category, nickName, email, palette, likeLogtime) 
 			values(		#{seq},
 						0,						
				 		#{category},
				 		#{nickName},
				 		#{email},
				 		#{palette},
				 		sysdate				 		
				 		)
	</insert>
	
	<!-- 좋아요 -->
    <update id="like" parameterType="likesingo">
    	begin
    		update likeSingo set likes=1 where seq = #{seq} and email=#{email} and replySeq=0;
    		
    		update community set comLike = comLike+1 where seq = #{seq};
    		
    		insert into etctest(seq, email, etclogtime,likelike) values( #{seq}, #{email}, sysdate, 1);
    	end;
    </update>
  	
  	  <!-- 좋아요 cancel -->
    <update id="likeCancel" parameterType="likesingo">
       begin
          update likeSingo set likes=0 where seq = #{seq} and email=#{email} and replySeq=0;
          
          update community set comLike = comLike-1 where seq = #{seq};
          
          update etctest set likelike = likelike-1 where seq = #{seq} and email=#{email};
       end;
    </update>
    
  	<!-- 공유 -->
  	<update id="loveShare" parameterType="java.util.Map"> 
  	begin
      update community set comShare = comShare+1 where seq=#{seq};
      
      insert into etctest(seq, email, etclogtime, shareshare) values( #{seq},#{memId}, sysdate, 1);
      
	  insert into pointhistory(pointhistoryseq , email, pointlogtime, pointcontent, pluspoint, minuspoint)
					values( pointhistory_seq.nextval,
							#{memId},
							sysdate,
							'공유 포인트',
							50,
							0);
							
	  update simrimember set point = point+50 where email = #{memId};
	 
	end;   
    </update>
    
   
    <!-- 심리테스트 좋아요체크 -->
    <select id="testLikeCheck" parameterType="likesingo" resultType="Integer">
    	select likes from likeSingo where seq=#{seq} and email=#{email} and replySeq=0  
    </select>
    
    <!-- 심리테스트 좋아요 테이블 삽입 -->
    <insert id="testLikeInsert" parameterType="likesingo">
    insert into likeSingo(seq, replySeq, category, nickName, email, palette, likeLogtime) 
 			values(		#{seq},
 						0,						
				 		#{category},
				 		#{nickName},
				 		#{email},
				 		#{palette},
				 		sysdate				 		
				 		)
	</insert>
   
   	<!-- 심리테스트 좋아요 -->
    <update id="testLike" parameterType="likesingo">
    	begin
    		update likeSingo set likes=1 where seq = #{seq} and email=#{email} and replySeq=0;
    		
    		update community set comLike = comLike+1 where seq = #{seq};
    		
    		insert into etctest(seq,email,etclogtime,likelike) values( #{seq}, #{email}, sysdate, 1);
    	end;
    </update>
  	
  	<!-- 심리테스트 좋아요 cancel -->
    <update id="testLikeCancel" parameterType="likesingo">
    	begin
    		update likeSingo set likes=0 where seq = #{seq} and email=#{email} and replySeq=0;
    		
    		update community set comLike = comLike-1 where seq = #{seq};
    		
    		update etctest set likelike = likelike-1 where seq = #{seq} and email=#{email};
    	end;
    </update>
    
   <!-- 게시글 사용후 포인트 차감 -->
	<update id="minusPoint" parameterType="java.util.Map">
		begin
		 <if test= "boardPoint != 0">
			insert into pointhistory(pointhistoryseq , email, pointlogtime, pointcontent, pluspoint, minuspoint)
					values( pointhistory_seq.nextval,
							#{memId},
							sysdate,
							'연애 심리글 구독',
							0,
							#{boardPoint});
		
		</if>
			update simrimember set point = point-#{boardPoint} where email = #{memId};
		end;
	</update>
	
	<select id="getCheckPoint" parameterType="java.util.Map" resultType="Integer">
		select checkPoint from likeSingo where seq=#{seq} and email=#{memId} and replySeq=0
	</select>
	
	<update id="updateCheckPoint" parameterType="java.util.Map">
		update likeSingo set checkPoint = 1 where email = #{memId} and seq = #{seq}
	</update>
	
	<insert id="checkPointInsert" parameterType="java.util.Map">
		insert into likeSingo(seq, replySeq, category, nickName, email, palette, likeLogtime, checkPoint) 
 				values(		#{seq},	
 							0,					
					 		#{category},
					 		#{nickName},
					 		#{email},
					 		#{palette},
					 		sysdate,
					 		1				 		
					 		)
	</insert>
	
	<select id="getLoveSide" parameterType="java.util.Map" resultType="simri">
		select * from 
       (select rownum rn, tt. * from 
       (select * from community 
       where category= '연애 심리글' 
       order by comLike desc)tt)
       where <![CDATA[rn>= #{startNum}]]> and  <![CDATA[rn<= #{endNum}]]>
	</select>
	
		<select id="getSimriSide" parameterType="java.util.Map" resultType="simri">
		select * from 
       (select rownum rn, tt. * from 
       (select * from community 
       where category= '심리 테스트' 
       order by comLike desc)tt)
       where <![CDATA[rn>= #{startNum}]]> and  <![CDATA[rn<= #{endNum}]]>
	</select>
   
   	<select id="getFavoriteSimriTest_List" resultType="simri">
		select * from 
       (select rownum rn, tt. * from 
       (select * from community 
       where category= '심리 테스트' 
       order by hit desc)tt)
       where <![CDATA[rn>0]]> and  <![CDATA[rn<3]]>  
	</select>
   	
   	<select id="getFavoriteMagazine_List" resultType="simri">
		select * from 
       (select rownum rn, tt. * from 
       (select * from community 
       where category= '연애 심리글' 
       order by hit desc)tt)
       where <![CDATA[rn>0]]> and  <![CDATA[rn<3]]> 
	</select>
	
	<select id="getRecentlySimriTest_List" resultType="simri">
		select * from 
       (select rownum rn, tt. * from 
       (select * from community 
       where category= '심리 테스트' 
       order by comlogtime desc)tt)
       where <![CDATA[rn>0]]> and  <![CDATA[rn<3]]> 
	</select>
	
	<select id="getCFList" resultType="advertise">
		select * from 
       (select rownum rn, tt. * from 
       (select * from indexcf 
       order by cflogtime desc)tt)
       where <![CDATA[rn>0]]> and  <![CDATA[rn<4]]> 
	</select>
	
  </mapper>
  